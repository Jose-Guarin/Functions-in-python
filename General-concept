# FUNCTIONS
def function_name (required argument, optional_argument =  default value, ...):
  return value1, value2,....

#Example: temperature.py

def convert_to_celsius (degrees, source = 'fahrenheit'):
  if source.lower() == 'fahrenheit':
    return (degrees-32)*(5/9)

  elif source.lower()== 'kelvin':
    return(degrees - 273.15)

  else:
    return f"Do not know to convert from {source}"

convert = convert_to_celsius(100,'farhenheit')
print(convert)

convert = convert_to_celsius(50)
print(convert)

convert = convert_to_celsius(degrees = 500,source = 'kelvin')
print(convert)
    
convert = convert_to_celsius(degrees = 500,source = 'calories')
print(convert)

==========APPLYING A FUNCTION==========
===> applymap method: The method apply the function to every element in the list
  def format_String(x):
    return f"{x:, .2f}"

script: list.applymap(format_String)
script: list.appymap(lambda x: f"{x:,.2f}")
# lambdas expresions are called ANONYMOUS FUNCTIONS and allow to define a function in a single line.

copy or subset = df.loc[ :, ['country','continent']].copy()





